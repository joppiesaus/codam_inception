# hnnggghhhh docker compose docker compose
version: '3.4'

services:
  mariadb:
    container_name: mariadb
    hostname: mariadb
    restart: on-failure
    build:
      context: ./requirements/mariadb
      args:
        - DB_NAME=${DB_NAME}
        - DB_ADMIN_NAME=${DB_ADMIN_NAME}
        - DB_ADMIN_PASSWORD=${DB_ADMIN_PASSWORD}
    expose:
      - 3306
    env_file:
      - .env
    networks:
      - epic
    volumes:
      - db:/var/lib/mysql

  wordpress:
    container_name: wordpress
    hostname: wordpress
    depends_on:
      - mariadb
    build:
      context: ./requirements/wordpress
      args:
        - MY_WORDPRESS_VERSION=6.3.1
        - DB_ADMIN_NAME=${DB_ADMIN_NAME}
        - DB_ADMIN_PASSWORD=${DB_ADMIN_PASSWORD}
        - ADMIN_NAME=${ADMIN_NAME}
        - ADMIN_PASSWORD=${DB_ADMIN_PASSWORD}
    expose:
      - 9000
    restart: on-failure
    env_file:
      - .env
    networks:
      - epic
    volumes:
      - www:/var/www

  nginx:
    container_name: nginx
    hostname: nginx
    depends_on:
      - wordpress
    ports:
      - "4430:4430"
    build:
      context: ./requirements/nginx
    restart: on-failure
    networks:
      - epic
    volumes:
      - www:/var/www

networks:
  epic:
    driver: bridge # isolated network between all containers

# I would recommend not doing this for smaller containers as it is annoying,
# but if you have a huge site or something this is anice
volumes:
  www:
    driver: local
    driver_opts:
      type: none
      o: bind # both accessible for host and container
      device: /home/jobvan-d/data/www
  db:
    driver: local
    driver_opts:
      type: none
      o: bind # both accessible for host and container
      device: /home/jobvan-d/data/db